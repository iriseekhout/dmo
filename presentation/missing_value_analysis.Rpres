---
title: "Missing value analysis"
author: dr. Iris Eekhout
date: March 5, 2022
output: powerpoint_presentation
---

Missing value analysis
========================================================
author: Dr. Iris Eekhout
date: 5-3-2021
autosize: true 

What are missing values
========================================================

Missing observations are defined as `NA` in R. 

Missing data can have different implications for data summaries, analyses and conclusions based on the data with missing values. 

Amount of missing data
========================================================

* Matrix perspective
* Variable perspective
* Case perspective

Example data
========================================================

A data example is used to demonstrate the methods to explore missing values. 
The example data has 25 rows and 5 columns. 


```{r include=TRUE, echo = FALSE}
#example data 
library(MASS)
library(dplyr)
library(tidyr)
library(mice)

cov <- matrix(c(rep(0.7, 25)), nrow = 5)
diag(cov) <- 1
dat <- MASS::mvrnorm(n = 25, rep(0,5), Sigma = cov)

patterns <- matrix(c(0,1,1,0,0,
                     1,0,1,1,0), nrow = 2)
set.seed(23421)
datm <- dmo::MCAR(data.frame(dat), alpha = 0.50, pattern = patterns, f = c(0.5, 0.5))
datm
``````


Matrix perspective
========================================================

**Matrix perspective:** the number of missing entries in the data matrix. 

The `is.na` function returns `TRUE` if a cell is missing (`NA`) and `FALSE` is a cell is observed.

In the example there are `r sum(is.na(datm))` missing data entries. The data frame contains 5 variables for 25 subjects, which makes a total of 125 data entries. So, `r sum(is.na(datm))/length(is.na(datm)) *100`% of the data entries are missing.  

```{R}
sum(is.na(datm))

sum(is.na(datm))/length(is.na(datm))

```


Variables perspective
=======================================================

**Variables perspective:** the number of missing values per variable.

For each variable we can count the number of missing observations (n) and calculate the proportion (p).


```{R}

datm %>%
  is.na %>%
  data.frame() %>%
  summarise_all(list(n = sum, p = mean)) %>%
  pivot_longer(everything(), 
               names_to = c("variable", ".value"),
               names_pattern = "(.*)_(.)")

```

Case perspective
========================================================

**Case perspective:** the number of rows, i.e. cases, with missing values.

Many analysis methods only use the rows that are fully observed: complete-case analysis. 

The data are then *listwise* deleted. 

```{r}

datm %>% 
  is.na %>%
  data.frame() %>%
  mutate(n_miss = rowSums(.),
         missing = ifelse(n_miss > 0, "rows with misings", "rows without missing")) %>%
  group_by(missing) %>%
  summarise(n = n(),
            p = n/ 25)


```


Case perspective - `mice`
===========================================================

The `cci` function in the `mice` package creates and indicator for the number of fully observed rows. 

```{r}

mice::cci(datm)

```

The `nic` function in the `mice` package counts the number of incomplete cases, i.e. cases with missing values. 

```{R}

mice::nic(datm)
```

The `ncc` function in the `mice` package counts the number of complete cases, i.e. cases full fully observed rows.
```{R}
mice::ncc(datm)
```


Missing data patterns
===========================================================

**Missing data pattern**: the combination of observed an unobserved values that occur together in a row. 
Generally notated as having a 0 for a missing value and a 1 for an observed value. 

Data often contains multiple different missing data patterns. The example shows three missing data patterns:

1 All variables are observed, so a row of only ones. 
2 Three variables observed ant two missing.
3 Three missing values and two observed. 

```{r}
mice::md.pattern(datm, plot= F)
``` 


The row-names show the number of times the pattern occurs in the data. 
The final column shows the number missing values the missing data pattern holds. 


Missing data pairs
============================================================

**Missing data pair:** the number of times two variables are either missing together or observed together.

This can inform us about how many cases we can actually use for imputation. The `md.pair` function from the `mice` package shows four matrices. Each matrix gives us information about combinations of missing values in our data. 

* `rr`: response-response, the count of how often two variables are both observed.
* `rm`: response-missing, the count of how often the row-variable is observed and the column-variable is missing.
* `mr`: missing-response, the count of how often the row-variable is missing and the column-variable is observed.
* `mm`: missing-missing, the count of how often two variables are both missing. 




```{r}
pat <- mice::md.pairs(datm)

```


Response-response
===========================================================

```{r}
pat$rr
```

Response-missing
===========================================================

```{r}
pat$rm
```

Missing-response
===========================================================

```{r}
pat$mr
```

Missing-missing
===========================================================

```{r}
pat$mm
```


Information for imputation
===========================================================

The proportion missing-response from the sum of the missing-response and missing-missing matrices shows how many usable cases the data have to impute the row variable from the column variable. 

```{R} 

round(100 * pat$mr / (pat$mr + pat$mm))

```

